<application>
  <component name="EasyCodeSetting">
    <option name="author" value="xiejr" />
    <option name="currTemplateGroupName" value="MybatisPlus" />
    <option name="templateGroupMap">
      <map>
        <entry key="Default">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Repository&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/repository&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}repository;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import com.gaoding.orm.jpa.repository.BaseRepository;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} extends BaseRepository&lt;$!{tableInfo.name}&gt;  {&#10;&#10;   &#10;&#10;}&#10;" />
                    <option name="name" value="dao.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import com.gaoding.orm.annotation.IdGenerator;&#10;import com.gaoding.orm.entity.BaseOrgEntity;&#10;import com.gaoding.orm.enumcode.IdGeneratorType;&#10;import lombok.*;&#10;import javax.persistence.Entity;&#10;import javax.persistence.Table;&#10;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;实体类&quot;)&#10;@Data&#10;@Entity&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@EqualsAndHashCode(callSuper = true)&#10;@Table(name = &quot;$tool.hump2Underline(&quot;$!{tableInfo.name}&quot;)&quot;)&#10;@IdGenerator(type = IdGeneratorType.IDENTITY)&#10;public class $!{tableInfo.name} extends BaseOrgEntity implements Serializable {&#10;    private static final long serialVersionUID = $!tool.serial();&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(!$column.name.equals(&quot;orgId&quot;) &amp;&amp; !$column.name.equals(&quot;id&quot;)&#10;    &amp;&amp; !$column.name.equals(&quot;createdBy&quot;) &amp;&amp; !$column.name.equals(&quot;createdAt&quot;)&#10;    &amp;&amp; !$column.name.equals(&quot;updatedBy&quot;) &amp;&amp; !$column.name.equals(&quot;updatedAt&quot;))&#10;    &#10;    /**&#10;     *  ${column.comment}&#10;     */&#10;    &#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;    #end&#10;    &#10;#end&#10;&#10;&#10;&#10;}" />
                    <option name="name" value="entity.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Service&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import com.gaoding.orm.service.BaseService;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务接口&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} extends BaseService&lt;$!{tableInfo.name}&gt; {&#10;&#10;   &#10;}" />
                    <option name="name" value="service.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;ServiceImpl&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service/impl&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.repository.$!{tableInfo.name}Repository;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;import com.gaoding.orm.service.impl.BaseServiceImpl;&#10;import javax.annotation.Resource;&#10;import lombok.extern.slf4j.Slf4j;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10; &#10;@Service(&quot;$!tool.firstLowerCase($!{tableInfo.name})Service&quot;)&#10;@Slf4j&#10;public class $!{tableName} extends BaseServiceImpl&lt;$!{tableInfo.name}, $!{tableInfo.name}Repository&gt; implements $!{tableInfo.name}Service {&#10;    @Resource&#10;    private $!{tableInfo.name}Repository $!tool.firstLowerCase($!{tableInfo.name})repository;&#10;&#10; &#10;}" />
                    <option name="name" value="serviceImpl.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Controller&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/controller&quot;))&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import $!{tableInfo.savePackageName}.convertor.$!{tableInfo.name}Convertor;&#10;import org.springframework.web.bind.annotation.*;&#10;import io.swagger.annotations.Api;&#10;import io.swagger.annotations.ApiOperation;&#10;import lombok.RequiredArgsConstructor;&#10;import lombok.extern.slf4j.Slf4j;&#10;import java.util.List;&#10;import javax.validation.Valid;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表控制层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($tableInfo.name)&quot;)&#10;@RequiredArgsConstructor(onConstructor = @__(@Autowired))&#10;@Slf4j&#10;@Api(value=&quot;$!tableInfo.comment 控制器&quot;,tags={&quot;$!tableInfo.comment 接口&quot;})&#10;public class $!{tableName} {&#10;    /**&#10;     * $!tableInfo.comment 服务对象&#10;     */&#10;    private final $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;&#10;    &#10;&#10;    /**&#10;     * $!tableInfo.comment 领域对象转换器&#10;     */&#10;    private final $!{tableInfo.name}Convertor $!tool.firstLowerCase($tableInfo.name)Convertor;&#10;    &#10;    &#10;    &#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;/{id}&quot;)&#10;    @ApiOperation(&quot;根据ID获取单条数据&quot;)&#10;    public $!{tableInfo.name} selectOne(@PathVariable $!pk.shortType id) {&#10;        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.findOne(id);&#10;    }&#10;    &#10;    &#10;    &#10;    /**&#10;     * 获取所有&#10;     *&#10;     * @return 所有数据&#10;     */&#10;    @ApiOperation(&quot;获取所有&quot;)&#10;    @GetMapping(&quot;/all&quot;)&#10;    public List&lt;$!{tableInfo.name}&gt; all() {&#10;        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.findAll(); &#10;    }&#10;    &#10;    &#10;    &#10;     /**&#10;     * 插入单条数据&#10;     *&#10;     * @param param 待插入数据&#10;     * @return void&#10;     */&#10;    @ApiOperation(&quot;插入数据&quot;)&#10;    @PostMapping(&quot;&quot;)&#10;    public void insert(@RequestBody @Valid $!{tableInfo.name}DTO param){&#10;        $!{tableInfo.name} entity=this.$!{tool.firstLowerCase($tableInfo.name)}Convertor.dtoToEntity(param);&#10;        this.$!{tool.firstLowerCase($tableInfo.name)}Service.save(entity);&#10;    }&#10;    &#10;    &#10;    &#10;    &#10;    /**&#10;     * 根据id删除数据&#10;     *&#10;     * @param id 主键&#10;     * @return void&#10;     */&#10;    @ApiOperation(&quot;根据ID删除数据&quot;)&#10;    @DeleteMapping(&quot;/{id}&quot;)&#10;    public void deleteById(@PathVariable $!pk.shortType id) {&#10;        this.$!{tool.firstLowerCase($tableInfo.name)}Service.delete(id);&#10;    }&#10;    &#10;    &#10;    &#10;    &#10;    &#10;    &#10;&#10;}" />
                    <option name="name" value="controller.java" />
                  </Template>
                  <Template>
                    <option name="code" value="//调试表原始对象&#10;$!tool.debug($tableInfo.obj)&#10;&#10;//调试列原始对象&#10;$!tool.debug($tableInfo.fullColumn.get(0).obj)&#10;&#10;//调试列原始列类型&#10;$!tool.debug($tableInfo.fullColumn.get(0).obj.dataType)&#10;&#10;//获取原始列类型中的字段&#10;sqlType = $!tool.getField($tableInfo.fullColumn.get(0).obj.dataType, &quot;typeName&quot;)&#10;&#10;//执行原始列类型中的方法&#10;sqlTypeLen = $!tableInfo.fullColumn.get(0).obj.dataType.getLength()&#10;" />
                    <option name="name" value="debug.json" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;#set($tableName = $tool.append($tableInfo.name, &quot;DTO&quot;))&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/dto&quot;))&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;dto&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import io.swagger.annotations.ApiModel;&#10;import io.swagger.annotations.ApiModelProperty;&#10;import lombok.*;&#10;import javax.validation.constraints.NotNull;&#10;import javax.validation.constraints.NotEmpty;&#10;&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@ApiModel(&quot;$!{tableInfo.comment}数据传输对象&quot;)&#10;public class $tableName implements Serializable {&#10;    private static final long serialVersionUID = $!tool.serial();&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;    &#10;    @ApiModelProperty(value=&quot;${column.comment}&quot;)&#10;    #if($!{tool.getClsNameByFullName($column.type)}!=(&quot;String&quot;))&#10;@NotNull(message=&quot;${column.comment}不得为空&quot;)&#10;#end&#10;    #if($!{tool.getClsNameByFullName($column.type)}==(&quot;String&quot;))&#10;@NotEmpty(message=&quot;${column.comment}不得为空&quot;)   &#10;#end&#10;private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;    &#10;    &#10;#end&#10;&#10;&#10;&#10;}" />
                    <option name="name" value="dto.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Convertor&quot;))&#10;#set($DtoName = $tool.append($tableInfo.name, &quot;DTO&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/convertor&quot;))&#10;&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}convertor;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;&#10;import java.util.List;&#10;import $!{tableInfo.savePackageName}.common.converter.BaseConverter;&#10;import org.mapstruct.Mapper;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})对象转换器&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@Mapper(componentModel = &quot;spring&quot;)&#10;public interface $!{tableName} extends BaseConverter&lt;$DtoName,$tableInfo.name&gt;{&#10;&#10;   &#10;&#10;}&#10;" />
                    <option name="name" value="converter.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;#set($tableName = $tool.append($tableInfo.name, &quot;DTO&quot;))&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/proto&quot;, &quot;.proto&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;syntax = &quot;proto3&quot;;&#10;&#10;option java_package=&quot;$!{tableInfo.savePackageName}.rpc.service&quot;;&#10;import &quot;google/protobuf/wrappers.proto&quot;;&#10;&#10;service $!{tableInfo.name}Service{&#10;   rpc Query($tableName) returns ($!{tableName}Resp) {}&#10;&#10;}&#10;&#10;message $!{tableName}Resp{&#10;repeated $tableName=10;&#10;}&#10;message $tableName{&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #set($type = $!{tool.getClsNameByFullName($column.type)})&#10;    #if($type.equals(&quot;String&quot;))&#10;     string   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;Double&quot;))&#10;     double   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;Long&quot;))&#10;     int64   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;Boolean&quot;))&#10;     bool   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;LocalDateTime&quot;))&#10;     string   $!{column.name}=21;&#10;    #end&#10;&#10;&#10;&#10;&#10;#end&#10;}&#10;&#10;&#10;&#10;&#10;&#10;&#10;" />
                    <option name="name" value="proto.proto" />
                  </Template>
                </list>
              </option>
              <option name="name" value="Default" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="MybatisPlus">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import com.baomidou.mybatisplus.annotation.TableName;&#10;import com.gaoding.persistence.entity.GdBaseEntity;&#10;import lombok.*;&#10;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;实体类&quot;)&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@EqualsAndHashCode(callSuper = true)&#10;@TableName(&quot;$tool.hump2Underline(&quot;$!{tableInfo.name}&quot;)&quot;)&#10;public class $!{tableInfo.name} extends GdBaseEntity {&#10;    private static final long serialVersionUID = $!tool.serial();&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(!$column.name.equals(&quot;orgId&quot;) &amp;&amp; !$column.name.equals(&quot;id&quot;)&#10;    &amp;&amp; !$column.name.equals(&quot;createdBy&quot;) &amp;&amp; !$column.name.equals(&quot;createdAt&quot;)&#10;    &amp;&amp; !$column.name.equals(&quot;updatedBy&quot;) &amp;&amp; !$column.name.equals(&quot;updatedAt&quot;))&#10;    &#10;    /**&#10;     *  ${column.comment}&#10;     */&#10;    &#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;    #end&#10;&#10;#end&#10;&#10;&#10;}&#10;&#10;&#10;&#10;&#10;" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Mapper&quot;))&#10;##导入宏定义&#10;$!define&#10;&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/mapper&quot;))&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}mapper;&#10;&#10;import com.gaoding.persistence.mapper.GdBaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表数据库访问层&quot;)&#10;public interface $!{tableName} extends GdBaseMapper&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="dao" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Service&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service&quot;, &quot;Service.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;import com.gaoding.persistence.service.GdBaseService;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务接口&quot;)&#10;public interface $!{tableName} extends GdBaseService&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="service" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;ServiceImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service/impl&quot;, &quot;ServiceImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service.impl&quot;)&#10;&#10;import com.gaoding.persistence.service.impl.GdBaseServiceImpl;&#10;import $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务实现类&quot;)&#10;@Service(&quot;$!tool.firstLowerCase($tableInfo.name)Service&quot;)&#10;public class $!{tableName} extends GdBaseServiceImpl&lt;$!{tableInfo.name},$!{tableInfo.name}Mapper&gt; implements $!{tableInfo.name}Service {&#10;&#10;}" />
                    <option name="name" value="serviceImpl" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Controller&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/controller&quot;, &quot;Controller.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;controller&quot;)&#10;&#10;##定义服务名&#10;#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), &quot;Service&quot;))&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import com.baomidou.mybatisplus.extension.api.ApiController;&#10;import com.baomidou.mybatisplus.extension.api.R;&#10;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;import java.io.Serializable;&#10;import java.util.List;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表控制层&quot;)&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($!tableInfo.name)&quot;)&#10;public class $!{tableName} extends ApiController {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    @Resource&#10;    private $!{tableInfo.name}Service $!{serviceName};&#10;&#10;    /**&#10;     * 分页查询所有数据&#10;     *&#10;     * @param page 分页对象&#10;     * @param $!entityName 查询实体&#10;     * @return 所有数据&#10;     */&#10;    @GetMapping&#10;    public R selectAll(Page&lt;$!tableInfo.name&gt; page, $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.page(page, new QueryWrapper&lt;&gt;($!entityName)));&#10;    }&#10;&#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;{id}&quot;)&#10;    public R selectOne(@PathVariable Serializable id) {&#10;        return success(this.$!{serviceName}.getById(id));&#10;    }&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 新增结果&#10;     */&#10;    @PostMapping&#10;    public R insert(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.save($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 修改结果&#10;     */&#10;    @PutMapping&#10;    public R update(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.updateById($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 删除数据&#10;     *&#10;     * @param idList 主键结合&#10;     * @return 删除结果&#10;     */&#10;    @DeleteMapping&#10;    public R delete(@RequestParam(&quot;idList&quot;) List&lt;Long&gt; idList) {&#10;        return success(this.$!{serviceName}.removeByIds(idList));&#10;    }&#10;}" />
                    <option name="name" value="controller" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;#set($tableName = $tool.append($tableInfo.name, &quot;DTO&quot;))&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/proto&quot;, &quot;.proto&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;syntax = &quot;proto3&quot;;&#10;&#10;option java_package=&quot;$!{tableInfo.savePackageName}.rpc.service&quot;;&#10;import &quot;google/protobuf/wrappers.proto&quot;;&#10;&#10;service $!{tableInfo.name}Service{&#10;   rpc Query($tableName) returns ($!{tableName}Resp) {}&#10;&#10;}&#10;&#10;message $!{tableName}Resp{&#10;repeated $tableName=10;&#10;}&#10;message $tableName{&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #set($type = $!{tool.getClsNameByFullName($column.type)})&#10;    #if($type.equals(&quot;String&quot;))&#10;     string   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;Double&quot;))&#10;     double   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;Long&quot;))&#10;     int64   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;Boolean&quot;))&#10;     bool   $!{column.name}=21;&#10;    #end&#10;    #if($type.equals(&quot;LocalDateTime&quot;))&#10;     string   $!{column.name}=21;&#10;    #end&#10;&#10;&#10;&#10;&#10;#end&#10;}&#10;&#10;&#10;&#10;&#10;&#10;&#10;" />
                    <option name="name" value="proto" />
                  </Template>
                </list>
              </option>
              <option name="name" value="MybatisPlus" />
            </TemplateGroup>
          </value>
        </entry>
      </map>
    </option>
    <option name="typeMapperGroupMap">
      <map>
        <entry key="Default">
          <value>
            <TypeMapperGroup>
              <option name="elementList">
                <list>
                  <TypeMapper>
                    <option name="columnType" value="varchar(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="char(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="text" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="decimal(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Double" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="decimal(\(\d+,\d+\))?" />
                    <option name="javaType" value="java.lang.Double" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="integer" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int4" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int8" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="bigint(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="datetime" />
                    <option name="javaType" value="java.time.LocalDateTime" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="timestamp" />
                    <option name="javaType" value="java.util.Date" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="boolean" />
                    <option name="javaType" value="java.lang.Boolean" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="tinyint(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Object" />
                  </TypeMapper>
                </list>
              </option>
              <option name="name" value="Default" />
            </TypeMapperGroup>
          </value>
        </entry>
      </map>
    </option>
  </component>
</application>